export type ExamsParams = {
    cursus_id?:           string | number,
    campus_id?:           string | number,
    user_id?:             string | number,
    project_id?:          string | number,
  
    sort?:               "id" | "begin_at" | "end_at" | "location" | "ip_range" | "max_people" | "created_at" | "updated_at" | "visible" | "name" | "campus_id" | "validated_at" | "validator_id",
  
    "filter[id]"?:string[] | number[],
    "filter[begin_at]"?:string[],
    "filter[end_at]"?:string[],
    "filter[location]"?:string[],
    "filter[ip_range]"?:string[],
    "filter[max_people]"?:string[],
    "filter[created_at]"?:string[],
    "filter[updated_at]"?:string[],
    "filter[visible]"?:string[],
    "filter[name]"?:string[],
    "filter[campus_id]"?:string[],
    "filter[validated_at]"?:string[],
    "filter[validator_id]"?:string[],
    "filter[future]"?:string[],
    "filter[end]"?:string[],
    "filter[validated]"?:string[],

    "range[id]"?:string[] | number[],
    "range[begin_at]"?:string[],
    "range[end_at]"?:string[],
    "range[location]"?:string[],
    "range[ip_range]"?:string[],
    "range[max_people]"?:string[],
    "range[created_at]"?:string[],
    "range[updated_at]"?:string[],
    "range[visible]"?:string[],
    "range[name]"?:string[],
    "range[campus_id]"?:string[],
    "range[validated_at]"?:string[],
    "range[validator_id]"?:string[],
  

    page?:                          number,
    "page[number]"?:                number,
    "page[size]"?:                  number,
}
